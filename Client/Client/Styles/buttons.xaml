<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:telerik="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls"
    xmlns:controls="http://schemas.telerik.com/2008/xaml/presentation">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary
            Source="/Telerik.Windows.Themes.Windows8;component/Themes/Telerik.Windows.Controls.xaml" />

        <ResourceDictionary
            Source="/Telerik.Windows.Themes.Windows8;component/Themes/telerik.windows.controls.ribbonview.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <Style x:Key="ToolBarButtonBaseStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource RadButtonStyle}">
        <Setter Property="IsBackgroundVisible" Value="False" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="20" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style x:Key="exportButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource ToolBarButtonBaseStyle}">
        <Setter Property="ToolTipService.ToolTip" Value="Экспортировать" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Width="16" Height="16" Source="/Common;component/Images/16x16/export.png" Stretch="None" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="expandAllButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource ToolBarButtonBaseStyle}">
        <Setter Property="ToolTipService.ToolTip" Value="Развернуть все" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Source="/Common;component/Images/ExpandAll.png" Stretch="None" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="expandPanelButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource ToolBarButtonBaseStyle}">
        <Setter Property="ToolTipService.ToolTip" Value="Развернуть" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Source="/Common;component/Images/16x16/tree_collapse.png" Stretch="None" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="collapsePanelButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource ToolBarButtonBaseStyle}">
        <Setter Property="ToolTipService.ToolTip" Value="Свернуть" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Source="/Common;component/Images/16x16/tree_expand.png" Stretch="None" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="collapseAllButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource ToolBarButtonBaseStyle}">
        <Setter Property="ToolTipService.ToolTip" Value="Свернуть все" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Source="/Common;component/Images/CollapseAll.png" Stretch="None" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="refreshButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource ToolBarButtonBaseStyle}">
        <Setter Property="ToolTipService.ToolTip" Value="Обновить" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Source="/Common;component/Images/16x16/refresh.png" Stretch="None" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="undoButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource ToolBarButtonBaseStyle}">
        <Setter Property="ToolTipService.ToolTip" Value="Отменить" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Source="/Common;component/Images/16x16/undo.png" Stretch="None" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="addButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource ToolBarButtonBaseStyle}">
        <Setter Property="ToolTipService.ToolTip" Value="Добавить" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Source="/Common;component/Images/16x16/add.png" Stretch="None" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="editButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource ToolBarButtonBaseStyle}">
        <Setter Property="ToolTipService.ToolTip" Value="Редактировать" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Source="/Common;component/Images/16x16/edit.png" Stretch="None" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="deleteButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource ToolBarButtonBaseStyle}">
        <Setter Property="ToolTipService.ToolTip" Value="Удалить" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Source="/Common;component/Images/16x16/remove.png" Stretch="None" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="saveButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource ToolBarButtonBaseStyle}">
        <Setter Property="ToolTipService.ToolTip" Value="Сохранить" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Source="/Common;component/Images/16x16/save.png" Stretch="None" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="saveDropDownButtonStyle" TargetType="controls:RadRibbonDropDownButton" BasedOn="{StaticResource RadRibbonDropDownButtonStyle}">
        <Setter Property="IsBackgroundVisible" Value="False" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="20" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ToolTipService.ToolTip" Value="Сохранить" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Source="/Common;component/Images/16x16/save.png" Stretch="None" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="addDropDownButtonStyle" TargetType="controls:RadRibbonDropDownButton" BasedOn="{StaticResource RadRibbonDropDownButtonStyle}">
        <Setter Property="IsBackgroundVisible" Value="False" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="20" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ToolTipService.ToolTip" Value="Добавить" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Source="/Common;component/Images/16x16/add.png" Stretch="None" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="copyButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource ToolBarButtonBaseStyle}">
        <Setter Property="ToolTipService.ToolTip" Value="Копировать" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Source="/Common;component/Images/16x16/clone.png" Stretch="None" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="searchButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource ToolBarButtonBaseStyle}">
        <Setter Property="ToolTipService.ToolTip" Value="Поиск" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Source="/Common;component/Images/16x16/search.png" Stretch="None" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="zoomButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource ToolBarButtonBaseStyle}">
        <Setter Property="ToolTipService.ToolTip" Value="Масштаб" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Source="/Common;component/Images/16x16/zoom2.png" Stretch="None" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="runButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource ToolBarButtonBaseStyle}">
        <Setter Property="ToolTipService.ToolTip" Value="Выполнить" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Source="/Common;component/Images/16x16/run.png" Stretch="None" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="stopButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource ToolBarButtonBaseStyle}">
        <Setter Property="ToolTipService.ToolTip" Value="Остановить" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Source="/Common;component/Images/16x16/stop.png" Stretch="None" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="cloneButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource ToolBarButtonBaseStyle}">
        <Setter Property="ToolTipService.ToolTip" Value="Клонировать" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Source="/Common;component/Images/16x16/clone.png" Stretch="None" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="errorButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource ToolBarButtonBaseStyle}">
        <Setter Property="ToolTipService.ToolTip" Value="Ошибки" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Source="/Common;component/Images/16x16/error_log.png" Stretch="None" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="trashButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource ToolBarButtonBaseStyle}">
        <Setter Property="ToolTipService.ToolTip" Value="В корзину" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Source="/Common;component/Images/16x16/trash.png" Stretch="None" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <Style x:Key="printButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource ToolBarButtonBaseStyle}">
        <Setter Property="ToolTipService.ToolTip" Value="Печать" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Source="/Common;component/Images/16x16/print.png" Stretch="None" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="trashRestoreButtonStyle" TargetType="telerik:RadButton" BasedOn="{StaticResource ToolBarButtonBaseStyle}">
        <Setter Property="ToolTipService.ToolTip" Value="Восстановить из корзины" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Image Source="/Common;component/Images/16x16/trash_restore.png" Stretch="None" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Name="HyperlinkButtonWrappingStyle" TargetType="HyperlinkButton">
        <Setter Property="Foreground" Value="#FF73A9D8" />
        <Setter Property="Padding" Value="2,0,2,0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="HyperlinkButton">
                    <Grid Cursor="{TemplateBinding Cursor}" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="UnderlineTextBlock" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="UnderlineTextBlock" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="Visibility" Duration="0">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <TextBlock x:Name="UnderlineTextBlock" Text="{TemplateBinding Content}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                TextDecorations="Underline"
                                Visibility="Collapsed" TextWrapping="Wrap"/>
                        <TextBlock Canvas.ZIndex="1"
                                x:Name="DisabledOverlay" Text="{TemplateBinding Content}"
                                Foreground="#FFAAAAAA"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                Visibility="Collapsed" TextWrapping="Wrap"/>
                        <TextBlock Text="{TemplateBinding Content}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}" TextWrapping="Wrap"/>
                        <Rectangle x:Name="FocusVisualElement" Stroke="#FF6DBDD1" StrokeThickness="1" Opacity="0" IsHitTestVisible="false"  />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Name="CollapsedToggleStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="#FF000000"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0" 
                                                        Storyboard.TargetName="Background" 
                                                        Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" To="LightGray" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames BeginTime="0"
                                                                       Storyboard.TargetName="toggleImage" 
                                                                       Storyboard.TargetProperty="Source">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <BitmapImage UriSource="/Common;component/Images/16x16/tree_expand.png" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="TextBlock2" To="1" />
                                        <DoubleAnimation Duration="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="TextBlock1" To="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid x:Name="Background" Background="White" Margin="1">
                            <Image x:Name="toggleImage" 
                                       Source="/Common;component/Images/16x16/tree_collapse.png">
                                <ToolTipService.ToolTip>
                                    <Grid>
                                        <TextBlock x:Name="TextBlock1" Text="Отобразить" Opacity="1"/>
                                        <TextBlock x:Name="TextBlock2" Text="Скрыть" Opacity="0"/>
                                    </Grid>
                                </ToolTipService.ToolTip>
                            </Image>
                        </Grid>
                        <ContentPresenter x:Name="contentPresenter"
                              Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>